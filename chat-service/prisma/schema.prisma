generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model attachments {
  id         String    @id @db.Uuid
  messageId  String    @db.Uuid
  filePath   String    @db.VarChar(255)
  fileType   String    @db.VarChar(255)
  uploadedAt DateTime? @db.Timestamptz(6)
  messages   messages  @relation(fields: [messageId], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model chats {
  id          String     @id @db.Uuid
  userId      String     @db.Uuid
  createdAt   DateTime?  @db.Timestamptz(6)
  lastUpdated DateTime?  @db.Timestamptz(6)
  users       users      @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  messages    messages[]
}

model messages {
  id          String                   @id @db.Uuid
  chatId      String                   @db.Uuid
  senderRole  enum_messages_senderRole
  content     String
  createdAt   DateTime?                @db.Timestamptz(6)
  attachments attachments[]
  chats       chats                    @relation(fields: [chatId], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model users {
  id           String   @id @db.Uuid
  firstName    String   @db.VarChar(50)
  lastName     String   @db.VarChar(50)
  username     String   @unique @db.VarChar(50)
  email        String   @unique @db.VarChar(100)
  passwordHash String   @db.VarChar(100)
  phoneNumber  String   @db.VarChar(20)
  authorities  String
  isActive     Boolean  @default(true)
  createdAt    DateTime @db.Timestamptz(6)
  updatedAt    DateTime @db.Timestamptz(6)
  chats        chats[]
}

enum enum_messages_senderRole {
  user
  model
}
