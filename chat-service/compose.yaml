services:
  chat-service:
    container_name: chat-service-container
    build:
      context: ../chat-service
      dockerfile: Dockerfile
    image: protu-ai/chat-service:v1.0.0
    ports:
      - '8082:8082'
    env_file:
      - ./.env
    depends_on:
      protu-db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@protu-db:5432/protu-db
      AI_SERVICE_URL: http://model-service-container:8000
    volumes:
      - node_modules:/app/node_modules
      - attachments:/app/uploads

  protu-db:
    image: postgres:latest
    container_name: protu-db-container
    env_file:
      - ./.env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: protu-db
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - '5432:5432'
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./db-init:/docker-entrypoint-initdb.d

volumes:
  node_modules:
  attachments:
  postgres-data:
