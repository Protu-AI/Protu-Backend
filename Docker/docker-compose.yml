name: protu-ai

include:
  - ../user-service/compose.yaml
  - ../chat-service/compose.yaml
  - ../notification-service/compose.yaml
  - ../content-service/compose.yaml
  - ../code-execution-service/compose.yaml
  - ../gateway/compose.yaml
  - ../service-discovery/compose.yaml

services:
  redis:
    image: redis:alpine3.21
    container_name: redis-cache-container
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      interval: 1s
      timeout: 3s
      retries: 5
    command: [ "redis-server" ]
    volumes:
      - redis-data:/data

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq-container
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq/

  #  model-service:
  #    container_name: model-service-container
  #    build:
  #      context: ../../AI
  #      dockerfile: Dockerfile
  #    image: protu-ai/model-service:v1.0.0
  #    ports:
  #      - "8000:8000"
  #    env_file:
  #      - ../../AI/.env
  #    depends_on:
  #      postgres:
  #        condition: service_healthy
  #    environment:
  #      DB_HOST: postgres
  #      DB_PORT: 5432
  #      DB_NAME: protu-db
  #      DB_USER: ${POSTGRES_USER}
  #      DB_PASSWORD: ${POSTGRES_PASSWORD}
  #    volumes:
  #      - model-data:/app/data
  #      - attachments:/app/uploads


volumes:
  maven-repo:
  redis-data:
  rabbitmq-data:
#  model-data:
